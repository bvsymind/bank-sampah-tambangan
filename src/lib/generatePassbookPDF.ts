import jsPDF from 'jspdf';
import 'jspdf-autotable';
import { autoTable } from "jspdf-autotable"
import { type Transaksi, type Nasabah, formatRupiah, formatDateOnly } from '@/services/firebase';


declare module 'jspdf' {
  interface jsPDF {
    autoTable: (options: any) => jsPDF;
  }
}



export const generatePassbookPDF = (nasabah: Nasabah, transactions: Transaksi[]) => {
  const doc = new jsPDF();
  let runningBalance = 0;
  let totalSetoran = 0;
  let totalPenarikan = 0;

  // Header Dokumen
  doc.setFontSize(18);
  doc.text('Buku Tabungan Bank Sampah', 105, 20, { align: 'center' });
  doc.setFontSize(12);
  doc.text('Bank Sampah Sido Makmur', 105, 28, { align: 'center' });

  // Informasi Nasabah
  doc.setFontSize(10);
  doc.text(`Nama Nasabah: ${nasabah.nama}`, 14, 40);
  doc.text(`ID Nasabah: ${nasabah.id_nasabah}`, 14, 45);
  doc.text(`Alamat: ${nasabah.alamat}`, 14, 50);
  doc.text(`Tanggal Cetak: ${new Date().toLocaleDateString('id-ID')}`, 14, 55);


  // Siapkan data untuk tabel
  const tableData = transactions.map(trx => {
    let setoran = '';
    let penarikan = '';
    let keterangan = '';
    
    if (trx.tipe === 'setor') {
      runningBalance += trx.total_harga;
      totalSetoran += trx.total_harga;
      setoran = formatRupiah(trx.total_harga);
      keterangan = trx.items?.map(item => `${item.nama_sampah} (${item.berat_kg} kg)`).join(', ') || 'Setoran Sampah';
    } else { // tipe 'tarik'
      runningBalance += trx.total_harga; // total_harga sudah negatif
      totalPenarikan += Math.abs(trx.total_harga);
      penarikan = formatRupiah(Math.abs(trx.total_harga));
      keterangan = 'Penarikan Saldo';
    }

    return [
      formatDateOnly(trx.timestamp),
      keterangan,
      setoran,
      penarikan,
      formatRupiah(runningBalance)
    ];
  });

  // Buat Tabel menggunakan jspdf-autotable
  autoTable(doc, {
    startY: 60,
    head: [['Tanggal', 'Keterangan', 'Setoran (Rp)', 'Penarikan (Rp)', 'Saldo (Rp)']],
    body: tableData,
    theme: 'grid',
    headStyles: {
      fillColor: [76, 173, 81], // Warna hijau header
      textColor: 255,
      fontStyle: 'bold',
    },
    styles: {
      cellPadding: 3,
      fontSize: 9,
    },
    columnStyles: {
      2: { halign: 'right' },
      3: { halign: 'right' },
      4: { halign: 'right' },
    },
    didDrawPage: (data) => {
      // Tambahkan footer di setiap halaman jika diperlukan
      doc.setFontSize(8);
      doc.text('Generated by Bank Sampah Sido Makmur', data.settings.margin.left, doc.internal.pageSize.getHeight() - 10);
    }
  });
  
  // Tambahkan ringkasan di akhir
  const finalY = (doc as any).lastAutoTable.finalY + 10;
  doc.setFontSize(10);
  doc.text('Ringkasan Periode:', 14, finalY);
  autoTable(doc, {
    startY: finalY + 2,
    body: [
      ['Total Setoran', formatRupiah(totalSetoran)],
      ['Total Penarikan', formatRupiah(totalPenarikan)],
      ['Saldo Akhir (Sesuai Riwayat)', formatRupiah(runningBalance)],
      ['Saldo Aktual di Sistem', formatRupiah(nasabah.saldo)],
    ],
    theme: 'plain',
    styles: { fontSize: 10 },
    columnStyles: { 1: { halign: 'right' } },
  });


  // Simpan PDF
  doc.save(`buku-tabungan-${nasabah.id_nasabah}-${nasabah.nama}.pdf`);
};
